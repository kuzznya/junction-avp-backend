apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  tls:
    - secretName: main-tls
      hosts:
        - junction.kuzznya.space
  rules:
    - host: junction.kuzznya.space
      http:
        paths:
          - path: /api/v1
            pathType: Prefix
            backend:
              service:
                name: backend
                port:
                  number: 80

---

apiVersion: v1
kind: Service
metadata:
  name: backend
  labels:
    app: backend
spec:
  ports:
    - port: 80
      targetPort: 8080
      name: http80
  selector:
    app: backend

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend
spec:
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: ghcr.io/kuzznya/junction-avp-backend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
            - name: DB_URL
              value: jdbc:postgresql://postgres:5432/postgres
            - name: DB_USERNAME
              value: postgres
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: junction-secrets
                  key: DB_PASSWORD
            - name: ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: junction-secrets
                  key: ADMIN_USERNAME
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: junction-secrets
                  key: ADMIN_PASSWORD
            - name: SEC_SECRET
              valueFrom:
                secretKeyRef:
                  name: junction-secrets
                  key: SEC_SECRET
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health
            initialDelaySeconds: 60
            terminationGracePeriodSeconds: 10
            timeoutSeconds: 2
            periodSeconds: 10
          readinessProbe:
            httpGet:
              port: 8080
              path: /actuator/health
            initialDelaySeconds: 70
            timeoutSeconds: 2
            periodSeconds: 10

